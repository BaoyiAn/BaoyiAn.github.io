{"main":{"How_to_buy_a_cheap_flight_in_Europe":{"content":"<h1 id=\"how-to-buy-a-cheap-flight-in-europe\">How to buy a cheap flight in Europe</h1>\n<p>If you want to feel more comfortable during your flight, big airline company would be a better choice. But they are usually more expensive.  </p>\n<p>Now I will teach you how to buy a proper ticket according to my hard experience! I have no choice I am too poor ( ▼-▼ ).</p>\n<h2 id=\"steps\">Steps</h2>\n<ol>\n<li>Use <code>Skyscanner</code> to search</li>\n<li>Turn to the low price airline official website to check whether they have a <code>Youth ticket</code></li>\n<li>Compare them and decide </li>\n</ol>\n<h2 id=\"youth-ticket\">YOUTH ticket</h2>\n<p>In fact, if you are a student or youth, you can search some official flight websites which have youth tickets. </p>\n<ul>\n<li><a href=\"https://www.finnair.com/int/gb/\">Finnair</a> </li>\n</ul>\n<ol>\n<li><strong><em>long trip</em></strong><br><strong>youth</strong> : hand luggage and 2*23kg checked-in luggages<ol>\n<li><strong><em>short trip</em></strong><br><strong>Youth</strong> : hand luggage and 1<em>23kg checked-in luggage<br><strong>Light</strong> :  hand luggage only (this kind of ticket will occur when you buy </em>round-trip<em> tickets and </em>multiple destination* tickets,  and the out-bound and return should be the same city)<br><code>Price</code> Light &lt; Youth</li>\n</ol>\n</li>\n</ol>\n<ul>\n<li><a href=\"http://www.airfrance.com/indexCom_en.html\">Air France</a><br>They have too many kinds of tickets.<br><strong>Mini</strong> : Hand luggage only (total 12kg / 26lb)<br><strong>Economy KLM</strong> : Hand only + seat<br><strong>Youth(FLEX Young)</strong> : hand and checked-in luggage (1<em>23kg / 50 lb)<br><code>Price</code> </em>Normal<em>  : Mini &lt; Economy KLM &lt; FLEX Young\n</em>Abnormal* : Flex Young (cheap!!)</li>\n<li><a href=\"https://www.flysas.com/en/us/\">SAS</a><br>It is a little difficult to find the youth ticket button if you are not careful. But I am sure it has Youth ticket. It has <em>two</em> kind of Youth ticket you can select.<br><strong>Youth Go Light</strong> : hand baggage only<br><strong>Youth Go</strong> : hand + checked-in(1*23kg / 50 lbs)<br><code>Price</code> Go Light &lt; Go<br><code>Extra luggage</code> 30 USD / per piece</li>\n</ul>\n<h2 id=\"cheap-flight\">Cheap Flight</h2>\n<p><strong>Note</strong> :<br>Since you buy a cheap flight, do not think about canceling and changing your flight. Well,  whoa, you can find the charge would be more expensive than you flight value. So here are some tips about cancellation. (I just talk about cheap flight)<br>Sometime the price of extra luggage will go up and down as the ticket price.<br>Some charge booking fee like vueling flight.<br><code>Pay</code><br><strong>Credit card</strong> : charge 1.5 eruos+<br><strong>Debit card</strong> : No charge</p>\n<ul>\n<li><a href=\"http://www.norwegian.com/\">Norwegian</a><br>If you use <code>ALLE26</code> code, you can buy a cheaper ticket sometime. Get it quickly ！(●&#39;◡&#39;●)<br><code>Ticket</code><br>-<em>LowFare</em> : hand+ wifi<br>-<em>LowFare+</em> : hand + 1<em>20 kg + Seat + Wifi<br>-</em>Flex<em> :  all free (include refundable) 2</em>20kg<br><code>Hand luggage</code> 10 kg / 55<em>40</em>23 cm<br><code>Cancel</code> Any kind of tickets can get a full<br>refund if you cancel it up to <em>4 hours</em>.<br><code>Extra luggage</code> change!! 15 eruos+</li>\n<li><a href=\"https://www.flysas.com/en/us/\">SAS</a><br><code>Cancel</code> It claims <em>24 hours</em> Cancel Policy (I don&#39;t know whether it is true)</li>\n<li><a href=\"https://www.ryanair.com/ie/en/\">Ryanair</a><br><code>hand luggage</code> big(55<em>40</em>20) and small(35<em>20</em>20)  total 10 kg<br><code>check-in</code> cheap must check-in online in 7 days (too early and late is not allowed)<br><code>note</code> It is noticed that they are strict with the luggage including hand luggage</li>\n<li><a href=\"\">Easyjet</a><br><code>Hand luggage</code> only one (no weight restriction) / 50<em>40</em>20 cm</li>\n</ul>\n<p>I don&#39;t want to write!! Too tired. </p>\n<p>You ask me whether I would end this piece of article. Ohhhh....it depends on my mood(￣ˇ￣)</p>\n<p>Good night!</p>\n<p>ABY<br>OULU<br>25/10/2016</p>\n","head":{"title":"How to buy a cheap flight in Europe","date":"25 Oct 2016","categories":["Study in Finland"],"tags":["travel","transportation","Flight"]}},"witai_Day_one":{"content":"<h1 id=\"-wit-ai-https-wit-ai-day-one\"><a href=\"https://wit.ai/\">Wit.ai</a> Day one</h1>\n<pre><code>        <span class=\"hljs-comment\">--Weather Forecast</span>\n</code></pre><p>标签（空格分隔）：study Wit.ai chatbot js</p>\n<hr>\n<h3 id=\"about-wit-ai-https-wit-ai-\">About <a href=\"https://wit.ai/\">Wit.ai</a></h3>\n<p>I need to complete my SWP2016 course work. TA recommend us to use it. That&#39;s why you can see I wrote this.</p>\n<blockquote>\n<p>Wit.ai is a opensource framwork. We can use it to do many things as it shows on its website.</p>\n<p><img src=\"https://lh5.googleusercontent.com/baKbnBRXjxWh-dy63rNtaLdnHuo7TejIfuwUClgH4gDCWpcFB3ysabPpQEjm56GyRjyhUnaUM25jwd_B4h89UuQBbnJvS5HL9aUN0P_cxf8nFhkX9f7QGn-jDUMbCs-6X2ju8ZSIJk2WE-JS\" alt=\"\"></p>\n</blockquote>\n<p>First, you should have an account. I choose to signin using my github account. No reason, just easy. One thing make me crazy is the browser would record your account, and every time you open wit.ai, it will show your own profile directly. I cannot see its original homepage!</p>\n<p>It seems I said too much nonsense. But I am happy is enough. (￣▽￣)&quot;</p>\n<p>Well, let&#39;s talk about the proper business.</p>\n<hr>\n<h2 id=\"part-one-train-the-bot\">Part One: Train the bot</h2>\n<p>NB:&ensp;&ensp;&ensp;<strong>I just follow the QuickStart Guide</strong></p>\n<h3 id=\"-step-1-create-an-app\"><strong>Step 1 :</strong> Create an app</h3>\n<p><img src=\"https://wit.ai/docs/images/quickstart/create-app-b587a039.png\" alt=\"\" title=\"Create view\"></p>\n<ol>\n<li>Type your new app name</li>\n<li><ol>\n<li>Create your new app<br>whooooa!! Congratulations!! you have created your first app.</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"-step-2-create-a-story\"><strong>Step 2 :</strong> Create a story</h3>\n<p>Actually, I cannot understand why foreigners like to name like this. Maybe it&#39;s really a story. (ˉ▽ˉ；)...</p>\n<p><img src=\"https://wit.ai/docs/images/quickstart/first-story-b2ee236a.gif\" alt=\"\"></p>\n<ol>\n<li>Click <code>Create Story</code></li>\n<li><code>User says</code> field<br>Type : &quot;What is the weather in Rome?&quot;</li>\n<li>[+]<code> Add a new entity</code></li>\n</ol>\n<ul>\n<li>Type &quot;intent&quot;, Value &quot;weather&quot;</li>\n<li>(2) Select &quot;wit/loction&quot; Highlight &quot;Rome&quot; in the sentence</li>\n</ul>\n<ol>\n<li>Click <code>Bot executes</code> , click on <code>func...</code> and type &quot;getForecast&quot;</li>\n<li>Click <code>Updates context keys with...</code> and type &quot;forecast&quot;(remember!!)</li>\n<li>Click <code>Bot sends</code> and type &quot;The weather will be {forecast}&quot;</li>\n</ol>\n<p>In this story, we have taught several things to Wit about weather forecasting. Bot can start forecasting only if it get the two elements keyword &quot;weather&quot; and Location(Rome is just an example).</p>\n<h3 id=\"-step-3-testing-the-story-in-the-chat-window\"><strong><em>Step 3 :</em></strong> Testing the story in the Chat window</h3>\n<p><img src=\"https://wit.ai/docs/images/quickstart/chat-window-a781d6b0.gif\" alt=\"\"></p>\n<ol>\n<li>Click or Enter shift+~</li>\n<li>Type &quot;how is the weather in Paris&quot;</li>\n<li>The expected action getForecast is correctly predicted. Now the Chat window asks which context keys will be produced by this action (since at this stage, the action is not implemented yet). Click on <code>forecast</code>, and then click on the <code>√</code> (check mark).</li>\n<li>OK. Now the Tthe expected message “The weather will be {forecast}” is predicted.</li>\n</ol>\n<hr>\n<h3 id=\"-step-4-improvement-of-bot-adding-a-branch-\"><strong><em>Step 4 :</em></strong> Improvement of bot(Adding a branch)</h3>\n<p>I prefer to call it a kind of exception processing.(●ˇ∀ˇ●)</p>\n<p><img src=\"https://wit.ai/docs/images/quickstart/branch-6110a5d1.gif\" alt=\"\"></p>\n<ol>\n<li>Click on the <code>branch icon</code> next to &quot;forecast&quot; </li>\n<li>Type <code>&quot;missing Location&quot;</code> in the <code>context-key</code> field</li>\n<li>Click <code>Bot says</code> and type &quot;Where?&quot;</li>\n<li>Click <code>User says</code> and type &quot;in Paris&quot;. you can select the entity, but Wit should normally detect the location entity</li>\n<li>Add a bookmark icon next to your <code>getForecast</code> action, and name your bookmark &quot;getForecast&quot;<br><font color='green'>NB: where is the bookmark means the branch starting from here</code><br>6.Click on <code>jump</code> and select the <code>getForecast</code> bookmark just created above.<br><font color='green'>NB: Here is means the branch ending by now. And the next is jumping over to the master branch</code></li>\n</ol>\n<h3 id=\"-step-5-testing-the-story-which-now-has-a-branch\"><strong><em>Step 5 :</em></strong> Testing the story which now has a branch</h3>\n<p>Method same as above</p>\n<hr>\n<h2 id=\"part-two-implementing-the-logic-of-the-bot\">Part Two : Implementing the  logic of the bot</h2>\n<p>This part is about the server. We can call the http api of Wit. we should write it by ourselves.</p>\n<p>Until now, the forecast is a fake prediction. So we should realize its forecast function on our side.</p>\n<ol>\n<li>In your terminal, clone the <a href=\"https://github.com/wit-ai/node-wit\">Node.js client</a> and install Node dependencies.</li>\n<li>Clone wit-ai<pre><code>$ git <span class=\"hljs-keyword\">clone</span> <span class=\"hljs-title\">https</span>://github.com/wit-ai/<span class=\"hljs-keyword\">node</span><span class=\"hljs-title\">-wit</span>\n$ cd <span class=\"hljs-keyword\">node</span><span class=\"hljs-title\">-wit</span>\n$ npm install\n</code></pre></li>\n<li>Open <code>examples/quickstart.js</code><br>Look at the <code>actions</code> object:<pre><code><span class=\"hljs-keyword\">const</span> actions = {\nsend(request, response) {\n <span class=\"hljs-keyword\">const</span> {sessionId, context, entities} = request;\n <span class=\"hljs-keyword\">const</span> {text, quickreplies} = response;\n <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">resolve, reject</span>) </span>{\n   <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'sending...'</span>, <span class=\"hljs-built_in\">JSON</span>.stringify(response)); <span class=\"hljs-comment\">// modify</span>\n   <span class=\"hljs-keyword\">return</span> resolve();\n });\n},\ngetForecast({context, entities}) {\n <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">resolve, reject</span>) </span>{\n   <span class=\"hljs-keyword\">var</span> location = firstEntityValue(entities, <span class=\"hljs-string\">'location'</span>)\n   <span class=\"hljs-keyword\">if</span> (location) {\n     context.forecast = <span class=\"hljs-string\">'sunny in '</span> + location; <span class=\"hljs-comment\">// we should call a weather API here</span>\n     <span class=\"hljs-keyword\">delete</span> context.missingLocation;\n   } <span class=\"hljs-keyword\">else</span> {\n     context.missingLocation = <span class=\"hljs-literal\">true</span>;\n     <span class=\"hljs-keyword\">delete</span> context.forecast;\n   }\n   <span class=\"hljs-keyword\">return</span> resolve(context);\n });\n},\n};\n</code></pre></li>\n<li>We have a <code>getForecast</code> function that:</li>\n</ol>\n<ul>\n<li>Receives the current context, and entities (in our case <code>intent</code> and <code>location</code>) as input parameters.</li>\n<li>Returns a promise that will modify context (in our case adding a <code>forecast</code> key to it).</li>\n</ul>\n<ol>\n<li>Let’s run this example. Replace <code><wit-access-token></code> with your Wit <strong><em>Server Access token</em></strong>, found in the Settings tab in the Wit console.<pre><code>$ <span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">examples</span>/quickstart.js <span class=\"hljs-tag\">&lt;wit-access-token&gt;</span>\n&gt; how is the weather <span class=\"hljs-keyword\">in</span> Rome?\nsending... {<span class=\"hljs-string\">\"text\"</span>:<span class=\"hljs-string\">\"The weather will be sunny\"</span>}\n&gt;\n</code></pre></li>\n</ol>\n<hr>\n<p>Actually, I try to test the exception many times, but there&#39;s still a problem. </p>\n<p>Good night!</p>\n<p>TBC.<br>OULU<br>22/10/2016</p>\n","head":{"title":"Wit.ai Day one  --Weather Forecast","date":"22 Oct 2016","categories":["Study in Finland"],"tags":["study","Wit.ai","chatbot","js"]}},"毕设周记1：对选题的初步了解及认识":{"content":"<h3 id=\"-ivi-ipv4-ipv6-\">基于IVI的IPv4/IPv6协议翻译技术的研究与实现</h3>\n<p align='right'> ——对选题的初步了解及认识</p>\n\n<p>&nbsp;&nbsp; &nbsp; &nbsp; TCP/IP在互联网全球化中扮演了重要的角色，而IPv4是目前主流且最为广泛使用的IP地址格式。但是IP地址的数量不是无限的，随着越来越多的用户接入互联网，IPv4地址面临耗尽的危险。</p>\n<blockquote>\n<ul>\n<li>03/02/2011, IANA (Internet Assigned Numbers Authority) Unallocated Address Pool was exhausted.</li>\n<li>19/04/2011, APNIC (Asia-Pacific Network Information Centre) unallocated address pool was exhausted.</li>\n<li>Other RIRs (Regional Internet Registry), unallocated address pool does not exhausted now, however, it should be a matter of time.</li>\n</ul>\n</blockquote>\n<p>&nbsp;&nbsp; &nbsp; &nbsp; 如果网络地址耗尽，互联网的崩溃也是可预见的。人们为了处理IPv4地址不够的问题，接连提出了划分子网，私有IP，NAT技术等。IPv6地址格式也在这样的情况下被提出。</p>\n<p>&nbsp;&nbsp; &nbsp; &nbsp; 将IPv4过渡到IPv6是很重要的，但是做此工作的人却很少。为了能够同时发送和接收IPv4，IPv6请求，目前大部分主机都是同时安装了IPv4和IPv6两种协议。然后对于那些仅有IPv4或IPv6其中一种协议的主机，如何完成对不同协议主机的访问呢？</p>\n<p>&nbsp;&nbsp; &nbsp; &nbsp; 我本次毕业设计的选题为《基于IVI的IPv4/IPv6协议翻译技术的研究与实现》，也就是实现IPv4/IPv6格式数据报的翻译。</p>\n<p>&nbsp;&nbsp; &nbsp; &nbsp;  根据目前对选题的认识，我在寒假期间主要完成3个任务。</p>\n<ul>\n<li><strong>重新学习计算机网络，阅读《图解TCP/IP》一书。</strong><br>&nbsp;&nbsp; &nbsp; &nbsp; 由于我此次选题与计算机网络关联较多，尤其与TCP/IP协议息息相关，所以我决定详细学习TCP/IP相关知识。</li>\n<li><strong>了解IPv4首部与IPv6首部。</strong><br>&nbsp;&nbsp; &nbsp; &nbsp; 对IP数据报的翻译，大致可分为两部分：<code>IP数据包首部</code>和<code>IP数据报数据部分</code>。<br>&nbsp;&nbsp; &nbsp; &nbsp; 最为关键的是首部的翻译，而首部的翻译又可大致分为两部分：<code>IP地址</code>和<code>除地址外的其他字段</code>。<br>&nbsp;&nbsp; &nbsp; &nbsp; 我最先需要做的就是详细了解IPv4和IPv6首部中每个字段的详细含义。</li>\n<li><strong>熟悉原始套接字编程。</strong><br>&nbsp;&nbsp; &nbsp; &nbsp; 对于IP数据报首部的编程，我需要掌握原始套接字的编程。我选择在Linux环境下进行TCP/IP编程。此部分，我参考学习《TCP/IP网络编程》一书。</li>\n</ul>\n<p>&nbsp;&nbsp; &nbsp; &nbsp; 之后的工作大致如下，大量阅读学习关于IPv4/IPv6翻译技术的相关文献，完成翻译的编程工作，部署测试环境，完成论文编写。</p>\n<p>ABY<br>2017.1.12</p>\n","head":{"title":"毕设周记1：对选题的初步了解及认识","date":"12 Jan 2017","categories":["毕业设计周记系列"],"tags":["IPv4","IPv6","任务"]}},"毕设周记2：学习IPv4与IPv6首部":{"content":"<h3 id=\"-ivi-ipv4-ipv6-\">基于IVI的IPv4/IPv6协议翻译技术的研究与实现</h3>\n<p align='right'> ——学习IPv4和IPv6首部</p>\n\n<p>@(周记)[IPv4首部|IPv6首部]</p>\n<h4 id=\"-ipv6-\">一、IPv6地址介绍</h4>\n<ol>\n<li><p><strong>全局单播地址</strong>：世界上唯一的一个地址。接口ID同城保存64比特<code>MAC地址</code>或定期更新的<code>临时地址</code>。<br><small> &emsp; &emsp;  &emsp;n比特  &emsp; &emsp; &emsp; &emsp;&emsp;m比特   &emsp;&emsp;&emsp; &emsp; &emsp;128-n-m比特</small><br>|&emsp;全局路由前缀  &emsp;| &emsp;子网ID  &emsp;|&emsp;&emsp;&emsp;&emsp;接口ID&emsp;&emsp;&emsp;&emsp;|<br><small>&lt;--------广域网络--------&gt;&lt;---站点内部---&gt;&lt;----------接口标识码-----------&gt;<br>&lt;--------------------网络标识-----------------&gt; &lt;----------接口标识码-----------&gt;</p>\n</li>\n<li><p><strong>链路本地单播地址</strong>：同一个数据链路内唯一的地址，不经过路由器的通信。接口ID通常保存64比特的<code>MAC地址</code>。<br><small> &emsp; &emsp;  10比特  &emsp; &emsp; &emsp; &emsp;&emsp;  &emsp;&emsp;54比特   &emsp;&emsp;&emsp; &emsp; &emsp;  &emsp;&emsp;  &emsp;  &emsp;64比特</small><br>|&emsp;<small>1111111010</small>&emsp;| &emsp;    &emsp;&emsp;&emsp;&emsp;0  &emsp;  &emsp;&emsp;  &emsp;&emsp;|&emsp;&emsp;&emsp;&emsp;接口ID&emsp;&emsp;&emsp;&emsp;|</p>\n</li>\n<li><p><strong>唯一本地地址</strong>：不进行互联网通信所使用的地址。与互联网通信时通常使用NAT或网关（代理）。<br><small> &emsp;&emsp;7比特  &emsp;  &nbsp;  1比特&emsp; &emsp;&emsp;  &emsp; &emsp; 40比特   &emsp;&emsp;&emsp; &emsp; &emsp;  &emsp; 16比特&emsp;&emsp;  &emsp;  &emsp; &emsp; 64比特</small><br>|&emsp;<small>1111110</small>&emsp;| &nbsp;  L &nbsp; | &emsp;    &emsp;&emsp;&emsp; 全局ID   &emsp;&emsp;  &emsp;&emsp;|&emsp;子网ID&emsp;|&emsp;&emsp;&emsp;&emsp;接口ID&emsp;&emsp;&emsp;&emsp;|</p>\n</li>\n</ol>\n<h4 id=\"-ipv4-ipv6-\">二、IPv4与IPv6特殊地址对比</h4>\n<ul>\n<li><p><strong>IPv4</strong></p>\n<blockquote>\n<p>-- <strong>私有网络的IP地址</strong><br>10.&nbsp; &nbsp; &nbsp; &nbsp;0.&nbsp;&nbsp;0.&nbsp;&nbsp;0 ~ 10.&nbsp; &nbsp;255.&nbsp;255.&nbsp;255 （10/8） A类<br>172.&nbsp; &nbsp;16.&nbsp;&nbsp;0.&nbsp;&nbsp;0 ~ 172.&nbsp; &nbsp;31.&nbsp;255.&nbsp;255 （172.16/12） B类<br>192.&nbsp;168.&nbsp;&nbsp;0.&nbsp;&nbsp;0 ~ 192.&nbsp;168.&nbsp;255.&nbsp;255 （192.168/16） C类<br>-- 默认路由<br>0.&nbsp;0.&nbsp;0.&nbsp;0/0 或default<br>-- 主机路由<br>IP地址/32<br>-- <strong>环回路由</strong>（同一台计算机上的程序之间进行通信）<br>127.0.0.1</p>\n</blockquote>\n</li>\n<li><p><strong>IPv6</strong></p>\n<blockquote>\n<p>| 特殊地址           |         二进制表示      | 省略表示   |<br>| :-------------    | :-------------------  | :------  |<br>| <b>未定义            | 0000 ··· 0000（128bit）    | :: /128  |<br>| <b>环回地址          | 0000 ··· 0001（128bit）     | :: 1 /128     |<br>| <b>唯一本地地址     | 1111 110                 | FC00:: /7  |<br>| <b>链路本地单播地址    | 1111 1110 10             | FE80:: /10 |<br>| <b>多播地址         | 1111 1111             | FF00:: /8  |</p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"-ipv4-ipv6-\">三、IPv4分片与IPv6分段</h4>\n<ul>\n<li><strong>IPv4分片</strong>：在路由器上进行分片处理，现在也有在发送端主机上处理的。</li>\n<li><strong>IPv6分段</strong>：<em>只在</em> 作为起点的<code>发送端主机</code>上进行，路由器不参与分片。因此，IPv6中的<code>路径MTU发现</code>功能必不可少。<br>NB：IPv6中最小MTU为1280 Bytes</li>\n</ul>\n<h4 id=\"-ipv4-ipv6-\">四、IPv4首部与IPv6首部</h4>\n<ol>\n<li><p><strong>IPv4 首部</strong></p>\n<blockquote>\n<p><img src=\"./IPv4首部.jpg\" alt=\"Alt text\"></p>\n</blockquote>\n<ul>\n<li><p><strong><code>版本（Version）</code></strong>：4 bit，标识IP首部的版本号。<br>IPv4的版本号为4，字段值为<em>“4”</em>。</p>\n<blockquote>\n<p> IP所有版本<br> 4：IP（Internet Protocol）<br> 5：ST（ST Datagram Mode）<br> 6：IPv6（Internet Protocol Version 6）<br> 7：TP/IX（TP/IX：The Next Internet）<br> 8：RIP（The P Internet Protocol）<br> 9：TUBA（TUBA）</p>\n</blockquote>\n</li>\n<li><p><code>首部长度（IHL：Internet Header Length）</code>：4 bit，表明IP首部大小，单位为4字节（32 bit）。<br>&emsp;&emsp;对于没有可选项的IP包，首部长度则设置为“5”。也就是说，当没有可选项时，IP首部长度为20字节（4×5=20）。</p>\n</li>\n<li><p><strong><code>区分服务（TOS：Type of Service）</code></strong>：8 bit，表明服务质量。TOS通常由应用指定，目前几乎无人使用。</p>\n<blockquote>\n<p>0 1 2：优先度（0、1、2表示0-7的优先度。从0到7表示从低到高）<br>3：最低延迟<br>4：最大吞吐<br>5：最大可靠性<br>6：最小代价<br>（3-6）：最大安全<br>7：未定义</p>\n</blockquote>\n</li>\n<li><p><code>DSCP 段与 ECN 段</code>：<br>|--  0 --|-- 1 --|-- 2 --|-- 3 --|-- 4 --|-- 5 --|-- 6 --|-- 7 --|<br>|---------------- DSCP段 ---------------|--- ECN ---| </p>\n<blockquote>\n<p><strong>DSCP</strong>（Differential Services Codepoint，差分服务代码点）6 bit，是TOS的一部分。现在统称为<em>DiffServ</em>，用来进行<strong>质量控制</strong>。<br>&emsp;&emsp;①若3~5位为 0 ，0~2位则被称作<strong>类别选择代码点</strong>。这样可以提供8种类型的质量控制级别。值越大，优先度越高。<br>&emsp;&emsp;②若第5位为 1 ，表示<strong>实验</strong> 或 <strong>本地使用</strong>。</p>\n<p><strong>ECN</strong>（Explicit Congestion Notification，显式拥塞通告）2 bit，用来报告网络拥堵情况。<br>&emsp;&emsp;① 6，ECT，ECN-Capable Transport。通告上层TCP层协议是否处理ECN。<br>&emsp;&emsp;② 7，CE，Congestion Experienced。当路由器在转发ECN为 1 的包的过程中，如果出现网络拥塞，就将CE位置为 1 。</p>\n</blockquote>\n</li>\n<li><p><strong><code>总长度（Total Length）</code></strong>：16 bit（2 Bytes），表示IP首部与数据部分结合起来的总字数。IP包的最大长度为65535（=2$^{16}$）Bytes。<br>&emsp;&emsp;NB. 目前的不存在能传输最大长度为65535字节的IP包的数据链路。</p>\n</li>\n<li><p><code>标识（ID：Identification）</code>：16 bit（2 Bytes），用于分片重组。同一个分片的标识值相同，不同分片的标识值不同。<br>&emsp;&emsp;通常，每发送一个IP包，它的值也逐渐递增。<br>&emsp;&emsp;即使ID相同，如果目标地址、源地址或协议不同的话，也被认为是<strong>不同</strong>的分片。</p>\n</li>\n<li><p><code>标志（Flags）</code>：3 bit，表示包被分片的相关信息。</p>\n<blockquote>\n<p>|  比特  |    含义  |<br>| :-----: | :-------- |<br>|  0  | 未使用。现在必须是 <strong>0</strong> 。  |<br>|  1  | 指示<strong>是否进行分片</strong>（don&#39;t fragment） ①0- 可以分片 ②1- 不能分片  |<br>|  2  | 包被分片的情况下，表示<strong>是否为最后一个包</strong> ①0- 最后一个分片的包 ②1- 分片中段的包  |</p>\n</blockquote>\n</li>\n<li><p><code>片偏移（FO：Fragment Offset）</code>：13 bit，标识被分片的每一个分段相对于原始数据的位置。<br>&emsp;&emsp;<strong>第一个</strong>分片对应 <strong>0</strong> 。<br>&emsp;&emsp;FO域占13位，最多可表示8192（=2$^{13}$）个相对位置。单位为 <strong>8字节</strong> ，最大表示原始数据8×8192=65536字节的位置。</p>\n</li>\n<li><p><strong><code>生存时间本（TTL：Time To Live）</code></strong>：8 bit，最初以秒为单位记录当前包在网络上应该生存的期限。<br>&emsp;&emsp;实际指可以中转的路由器个数。每经过一个路由器，TTL减1，直到变成0则丢弃该包。</p>\n<blockquote>\n<p>TTL占8位，可表示0-255的数字。因此一个包中转路由的次数不会超过2$^{8}$ = 256个。由此可避免IP包在网络内无限传递的问题。</p>\n</blockquote>\n</li>\n<li><p><strong><code>协议（Protocol）</code></strong>：8 bit（1 Byte），表示IP包传输层的上层协议编号。</p>\n<blockquote>\n<p><a href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers\">协议编号一览表</a><br><a href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers\">http://www.iana.org/assignments/protocol-numbers/protocol-numbers</a><br><img src=\"./IP上层协议编号.png\" alt=\"Alt text\"></p>\n</blockquote>\n</li>\n<li><p><code>首部校验和（Header Checksum）</code>：16 bit（2 Bytes），也叫<em>IP首部校验和</em>。 <strong>只校验数据报的首部，不校验数据部分</strong>。它用来确保IP数据报不被破坏。</p>\n<blockquote>\n<p>校验和计算过程：<br>①将该校验和的所有位置设置为 <strong>0</strong>。<br>②以16 bit为单位划分IP首部，并用 1 补数。（通常计算机中对整数运算采用2补数的方式。但在校验和的计算中采用1补数运算方法。这样做的有点在于即使产生仅为也可以回到第1位，可以防止信息缺失并且可以用2个0区分使用。）</p>\n</blockquote>\n</li>\n<li><p><code>源地址（Source Address）</code>：32 bit（4 Bytes），发送端IP地址。</p>\n</li>\n<li><p><code>目标地址（Destination Address）</code>：32 bit（4 Bytes），发送端IP地址。</p>\n</li>\n<li><p><code>可选项（Options）</code>：长度可变，通常只在进行实验或诊断时使用。</p>\n<blockquote>\n<p>该字段包含如下几点信息：<br>&emsp;-- 安全级别<br>&emsp;-- 源路径<br>&emsp;-- 路径记录<br>&emsp;-- 时间戳</p>\n</blockquote>\n</li>\n<li><p><code>填充（Padding）</code>：也称填补物。在有可选项的情况下，首部长度可能不是32bit的整数倍。为此，通过向字段 <strong>填充 0</strong>，调整为32bit的整数倍。</p>\n</li>\n<li><p><code>数据（Data）</code>：存入数据。将IP上层协议的首部也作为数据进行处理。</p>\n</li>\n</ul>\n</li>\n</ol>\n<ol>\n<li><strong>IPv6 首部</strong></li>\n</ol>\n<blockquote>\n<p><img src=\"./IPv6首部.jpg\" alt=\"Alt text\"></p>\n<p>IPv6首部为减轻路由器负担，省略了首部校验和字段。</p>\n<p>分片处理所用的识别码成为可选项。为了让64位CPU的计算机处理方便，IPv6首部及可选项都由 <strong>8 Bytes</strong> 构成。</p>\n</blockquote>\n<ul>\n<li><code>版本（Version）</code>：4 bit。IPv6版本号为6，字段值为“6”。</li>\n<li><code>通信量类（Traffic Class）</code>：8 bit，相当于IPv4的<strong>TOS</strong>。</li>\n<li><p><code>流标号（Flow Label）</code>：20 bit，准备用于<strong>服务质量（QoS：Quality of Service）控制</strong>。</p>\n<blockquote>\n<p>在进行服务质量控制时：<br>①将流标号设置为一个<em>随机数</em>。<br>②然后利用一种可以设置流的协议RSVP（Resource Reservation Protocol）在路由器上进行QoS设置。当某个包在发送途中需要QoS时，需要附上RSVP预想的流标号。路由器接收到这样的IP包后：1）先将流标号作为<em>查找关键字</em>；2）迅速从服务质量控制信息中查找并做相应处理。</p>\n<p>注意：只有<strong>流标号</strong>、<strong>源地址</strong>、<strong>目标地址</strong>三项完全一致时，才被认为是一个流。</p>\n<p>补充：<small>采用QoS的路由器必须尽早转发所接受的包。但是由于以何种质量发送包才合适还需要检索相应的质量控制信息，因此优势可能会反而影响发送质量。而流标号正是为“高速检索”而使用的一种索引（index）。它的值本身没有什么具体含义。</small></p>\n</blockquote>\n</li>\n<li><p><code>有效载荷长度（Payload Length）</code>：最大长度（Maximum Length）为 16 bit，有效载荷指<strong>包的数据部分</strong>。</p>\n<blockquote>\n<p>IPv4的TL（Total Length）是指包括首部在内的所有长度。</p>\n<p>IPv6中的Payload Length不包括首部，只表示数据部分的长度。由于<strong>IPv6的可选项</strong>是指连接IPv6首部的数据，因此当有可选项时，此处包含可选项数据的所有长度就是Payload Length。</p>\n<p>补充：<small>该字段的最大长度为16比特，因此数据最大长度可达65535字节。不过，为了让更大的数据也能通过一个IP包发送出去，便增加了<strong>大型有效载荷选项（Jumbo Payload Option）</strong>。该选项长度为32比特。有了它IPv6一次可发送最大4G字节的包</small></p>\n</blockquote>\n</li>\n<li><p><code>下一个首部（Next Header）</code>：8 bit，相当于<strong>IPv4中的 协议字段 </strong>。通常表示IP的上一层协议是TCP或UDP。不过在有IPv6扩展首部的情况下，该字段表示后面第一个扩展首部的协议类型。</p>\n</li>\n<li><p><code>跳数限制（Hop Limit）</code>：8 bit，相当于<strong>IPv4中的 TTL</strong>。为了强调“可通过路由器”这个概念，才将名字改成了“Hop Limit”。数据每经过一次路由器就减1，减到0则丢弃数据。</p>\n</li>\n<li><p><code>源地址（Source Address）</code>：128 bit（16个8位字节），表示发送端IP地址。</p>\n</li>\n<li><code>目标地址（Destination Address）</code>：128 bit（16个8位字节），表示接收端IP地址。</li>\n</ul>\n<p><br></p>\n<p>&emsp;<strong>IPv6扩展首部</strong></p>\n<p>&emsp;&emsp;IPv6首部长度固定，无法将可选项加入其中。取而代之，通过扩展首部对功能进行有效扩展。<br>&emsp;&emsp;扩展首部通常介于IPv6首部与TCP/UDP首部中间。在IPv4中可选项长度固定为40字节。IPv6中没有这种限制，即IPv6的扩展首部可以是任意长度。<br>&emsp;&emsp;扩展首部当中还可以包含 <strong>扩展首部协议</strong> 以及 <strong>下一个扩展首部字段</strong> 。</p>\n<blockquote>\n<p><img src=\"./IPv6扩展首部.jpg\" alt=\"Alt text\"></p>\n</blockquote>\n<p>&emsp;&emsp;<em>注意</em>：IPv6首部中<strong>没有</strong> <em>标识</em> 以及 <em>标志</em> 字段，在需要对IP数据包进行分片时可以使用扩展首部。</p>\n<blockquote>\n<p>&emsp;&emsp;当需要对IPv6的数据报进行分片时，可以<strong>设置扩展域</strong>为 44（Fragment Header，IPv6片首部）。<br>&emsp;&emsp;使用IPsec时，可以使用50、51的ESP（载荷加密）、AH（认证首部）。<br>&emsp;&emsp;Mobile IPv6的情况下可以采用 60（目标地址选项） 与 135（移动首部）。</p>\n<p><em>补充</em>：<small>IPv6扩展首部与协议号</small><br><img src=\"./IPv6扩展首部与协议号.jpg\" alt=\"Alt text\"></p>\n</blockquote>\n<p>ABY<br>2017.02.05</p>\n","head":{"title":"毕设周记2：学习IPv4和IPv6首部","date":"05 Feb 2017","categories":["毕业设计周记系列"],"tags":["IPv4首部","IPv6首部"]}}},"index":{"tagMap":{"travel":["How_to_buy_a_cheap_flight_in_Europe"],"transportation":["How_to_buy_a_cheap_flight_in_Europe"],"Flight":["How_to_buy_a_cheap_flight_in_Europe"],"study":["witai_Day_one"],"Wit.ai":["witai_Day_one"],"chatbot":["witai_Day_one"],"js":["witai_Day_one"],"IPv4":["毕设周记1：对选题的初步了解及认识"],"IPv6":["毕设周记1：对选题的初步了解及认识"],"任务":["毕设周记1：对选题的初步了解及认识"],"IPv4首部":["毕设周记2：学习IPv4与IPv6首部"],"IPv6首部":["毕设周记2：学习IPv4与IPv6首部"]},"sorted":["毕设周记2：学习IPv4与IPv6首部","毕设周记1：对选题的初步了解及认识","How_to_buy_a_cheap_flight_in_Europe","witai_Day_one"]}}